# Rapport d'Analyse des Algorithmes de Découverte de Dépendances Fonctionnelles
# Date: 2025-05-11 07:42:13
# Base de données: Bupa.db

## Erreurs et avertissements

| Algorithme | Erreur/Avertissement |
|------------|----------------------|
| FDep | 'FDep' object has no attribute '_discover_rules_java' |

## Résumé des performances

Meilleur algorithme en termes de vitesse: MATILDA_FDs
Meilleur algorithme en termes d'efficacité: FDep
Algorithme découvrant le plus de règles: MATILDA_FDs

## Statistiques globales

### Nombre de FDs découvertes par algorithme
| Algorithme | Nombre de FDs |
|------------|---------------|
| MATILDA_FDs | 0 |
| TANE | 0 |
| FastFDs | 0 |
| FDep | 0 |
| DFD | 0 |
| AIDFD | 0 |
| Pyro | 0 |

### Temps d'exécution par algorithme
| Algorithme | Temps (s) | FDs/s | Temps/FD (ms) |
|------------|-----------|-------|---------------|
| FDep | 0.14 | 0.00 | 136.01 |
| AIDFD | 0.27 | 0.00 | 268.06 |
| Pyro | 0.28 | 0.00 | 276.01 |
| MATILDA_FDs | 0.33 | 0.00 | 327.86 |
| FastFDs | 1.40 | 0.00 | 1403.64 |
| DFD | 1.57 | 0.00 | 1565.81 |
| TANE | 1.95 | 0.00 | 1949.09 |

## Comparaisons détaillées entre algorithmes

## Analyse et recommandations

### Recommandations

1. Pour les applications nécessitant une exécution rapide, privilégiez l'algorithme MATILDA_FDs.
2. Pour les bases de données volumineuses où l'efficacité est cruciale, FDep est recommandé.
3. Pour une découverte plus exhaustive des dépendances, MATILDA_FDs offre le meilleur résultat.

### Notes supplémentaires

- Les résultats peuvent varier selon la structure et la taille de la base de données.
- Un grand nombre de règles n'est pas nécessairement synonyme de qualité ; vérifiez la pertinence des dépendances découvertes.
- Pour les bases de données de production, envisagez d'exécuter plusieurs algorithmes et de combiner leurs résultats.

---
Rapport généré automatiquement par le Comparateur d'Algorithmes FD.
